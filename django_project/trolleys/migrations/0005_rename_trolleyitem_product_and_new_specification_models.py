# Generated by Django 4.2.7 on 2025-10-26 12:00

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('trolleys', '0004_trolleydrawer_sensordata_and_more'),
    ]

    operations = [
        # Eliminar la tabla TrolleyItem (si existe)
        migrations.DeleteModel(
            name='TrolleyItem',
        ),
        # Crear el nuevo modelo Product
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del artículo', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Descripción del artículo', null=True)),
                ('sku', models.CharField(help_text='SKU único del artículo (ej: DRK024, SNK082)', max_length=100, unique=True)),
                ('stock_quantity', models.IntegerField(default=0, help_text='Cantidad total de unidades en inventario', validators=[django.core.validators.MinValueValidator(0)])),
                ('image', models.ImageField(blank=True, help_text='Imagen del artículo', null=True, upload_to='products/%Y/%m/%d/')),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='Precio del artículo', max_digits=10, null=True)),
                ('category', models.CharField(blank=True, help_text='Categoría del artículo (ej: Bebida, Snack, Comida)', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'ordering': ['name'],
            },
        ),
        # Crear el modelo Specification
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spec_id', models.CharField(help_text='ID único de la especificación (ej: SPEC_20251013_01)', max_length=255, unique=True)),
                ('name', models.CharField(help_text='Nombre descriptivo (ej: LX065 - Eco Bebidas, EK088 - Primera Clase)', max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trolley_template', models.ForeignKey(blank=True, help_text='Trolley base para esta especificación', null=True, on_delete=django.db.models.deletion.SET_NULL, to='trolleys.trolley')),
            ],
            options={
                'verbose_name': 'Especificación',
                'verbose_name_plural': 'Especificaciones',
                'ordering': ['name'],
            },
        ),
        # Crear el modelo SpecificationItem
        migrations.CreateModel(
            name='SpecificationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required_quantity', models.IntegerField(help_text='Cantidad requerida de este producto en este drawer', validators=[django.core.validators.MinValueValidator(1)])),
                ('drawer', models.ForeignKey(help_text='Drawer donde debe ir el producto', on_delete=django.db.models.deletion.CASCADE, related_name='spec_items', to='trolleys.trolleydrawer')),
                ('product', models.ForeignKey(help_text='Producto requerido', on_delete=django.db.models.deletion.CASCADE, related_name='spec_items', to='trolleys.product')),
                ('specification', models.ForeignKey(help_text='Especificación a la que pertenece este requisito', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='trolleys.specification')),
            ],
            options={
                'verbose_name': 'Artículo de Especificación',
                'verbose_name_plural': 'Artículos de Especificación',
                'ordering': ['specification', 'drawer'],
            },
        ),
        # Agregar índices
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='trolleys_pr_sku_abcdef_idx'),
        ),
        migrations.AddConstraint(
            model_name='specificationitem',
            constraint=models.UniqueConstraint(fields=['specification', 'drawer', 'product'], name='unique_spec_item_per_drawer'),
        ),
    ]
